from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List


def get_inline_markup_for_select(
    options: List[str], selected_options: List[str], back_button: bool = True
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–π (–¥–ª—è FSM —Å—Ü–µ–Ω–∞—Ä–∏—è). 
    """
    buttons: List[List[InlineKeyboardButton]] = [
        [InlineKeyboardButton(
            text=f"‚ö™ {option}" if option in selected_options else option, callback_data=option)]
        for option in options
    ]

    buttons.append([InlineKeyboardButton(
        text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–±–æ—Ä", callback_data="finish")])
    buttons.append([InlineKeyboardButton(
        text="üóë –û—á–∏—Å—Ç–∏—Ç—å –≤—ã–±–æ—Ä", callback_data="clear")])

    if back_button:
        buttons.append([InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")])

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_inline_markup_send_vacancy(url: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é.
    """
    button = InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é üîó", url=url)
    return InlineKeyboardMarkup(inline_keyboard=[[button]])
